
#
# General ES6 snippets
#

# Generator function
snippet gfn
function* ${1:name}(${2}) {
	yield ${3};
}
endsnippet

# Arrow function
snippet => "Arrow function" i
(${1}) => {
	${2}
}
endsnippet

# Class
snippet class
class ${1:name} {
	constructor(${2:arg}) {
		${3:// init}
	}
	${4}
}
endsnippet

# For of loop
snippet forof
for (let ${1:s} of ${2:sequence}) {
	${3}
}
endsnippet

# Import
snippet im
import ${1:foo} from '${2:bar}'
endsnippet









#
#  React snippets
#

snippet cs "React.addons.classSet" b
var cx = React.addons.classSet
endsnippet

snippet cdm "component did mount" b
componentDidMount() {
	${1}
}$0
endsnippet

snippet cdup "component did update" b
componentDidUpdate(prevProps, prevState) {
	${1}
}$0
endsnippet

snippet cwm "component will mount" b
componentWillMount() {
	${1}
}$0
endsnippet

snippet cwr "component will receive props" b
componentWillReceiveProps(nextProps) {
	${1}
}$0
endsnippet

snippet cwun "component will unmount" b
componentWillUnmount() {
	${1}
}$0
endsnippet

snippet cwu "component will update" b
componentWillUpdate(nextProps, nextState) {
	${1}
}$0
endsnippet

snippet cx
cx({
	${1}: ${2}
})
endsnippet

snippet fup
forceUpdate(${1:callback})
endsnippet

snippet gdp "get default props" b
getDefaultProps() {
	return {
		${1}
	}
}$0
endsnippet

snippet gis "get initial state" b
getInitialState() {
	return {
		${1}: ${2}
	}
}$0
endsnippet

snippet ism "is mounted"
isMounted()
endsnippet

snippet jsx "define jsx dom" b
/**
 * @jsx React.DOM
 */
endsnippet

snippet ren
render() {
	return (
		${1:<div />}
	)
}$0
endsnippet

snippet pt "propTypes" b
propTypes: {
	${1}: React.PropTypes.${2:string}
}
endsnippet

snippet jsx "create class/component" b
import React, { ${1:PropTypes, }Component } from 'react'
class ${2:ClassName} extends Component {
	$0
	render() {
		return (
			${VISUAL}$4
		)
	}
}

${3:export default $2}
endsnippet

snippet ren
render: function() {
	return (
		${1:<div />}
	)
}$0
endsnippet

snippet sst "set state" b
this.setState({
	${1}: ${2}
})$0
endsnippet

snippet scu "should component update"
shouldComponentUpdate(nextProps, nextState) {
	${1}
}$0
endsnippet

snippet props "get property" i
this.props.${1}
endsnippet

snippet state "get state" i
this.state.${1}
endsnippet

snippet trp
this.transferPropsTo(${VISUAL}$0)
endsnippet

